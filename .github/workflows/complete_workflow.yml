name: Lint, test, build, and publish (PyPI and Conda)

on:
  release:
    types: [published]
  

jobs:
  lint_and_test:
    name: Runs the linter and tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies and Lauetools
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  build-n-publish-pypi:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    needs: lint_and_test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install versiontag
        python -m pip install setuptools-scm==4.1.2
        python -m pip install wheel==0.34.2
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Publish a Python distribution to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  build-n-publish-anaconda:
    name: Build and publish anaconda packages
    needs: lint_and_test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2.1.0
        with:
          python-version: '3.9'
          channels: conda-forge
      - name: install conda build
        shell: bash -l {0}
        run: conda install conda-build conda-verify anaconda-client
      # Runs the action with the following inputs or defaults if not specified.
      - name: validate recipe
        shell: bash -l {0}
        id: conda_validation
        run: |
          PACKAGE_PATHS=$(conda build . --output --check -c conda-forge)
          PACKAGE_PATHS="${PACKAGE_PATHS//$'\n'/' '}"
          PACKAGE_PATHS="${PACKAGE_PATHS//$'\r'/''}"
          echo "::set-output name=package_paths::$PACKAGE_PATHS"
      - name: run build
        shell: bash -l {0}
        run: conda build -c conda-forge -c bioconda .
      - name: convert packages
        shell: bash -l {0}
        run: |
          conda convert -p osx-arm64 -p osx-64 -p win-64 -o conda_convert ${{ steps.conda_validation.outputs.package_paths }}
          mkdir conda_convert/linux-64
          cp -f ${{ steps.conda_validation.outputs.package_paths }} conda_convert/linux-64
      - name: upload to anaconda
        shell: bash -l {0}
        run: anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload --no-progress --force conda_convert/*/*
